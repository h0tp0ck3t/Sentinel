// Name: Failed Logon Attempts
// Description: This query uses the Syslog, authpriv logs to show when there are failed logon attempts from unknown users.
//              In this case, the unknown user means the account that tried to log in isn't provisioned on the machine. A 
//              few hits could indicate someone attempting to access a machine they aren't authorized on. If there are a lot
//              of hits, especially from outside your network, it could indicate a brute force attack. The query looks at 
//              the last seven (7) days by default.
//
// Id: e7ec9fa6-e7f7-41ed-a34b-b956837a3ee6
//
// Entity: #Host
// Input: none
// Output: Chart showing failed logon activity
//
// Severity: Medium
//
// QueryFrequency: 24
//
// QueryPeriod: 24
//
// AlertTriggerOperator: gt
//
// AlertTriggerThreshold: 0
// 
// Data Source: #Syslog, #authpriv
//
// Tactics: #InitialAccess, #Discovery, #LateralMovement
//
// Change startdate below if you want a different timespan
let startdate = ago(1d);
// Below pulls messages from syslog-authpriv logs where there was an authentication failure with an unknown user.
// IP address of system attempting logon is also extracted from the SyslogMessage field. Some of these messages
// are aggregated.
let authfail = Syslog     
| where Facility == "authpriv"   // looks at authpriv messages
| where TimeGenerated >= startdate
| where SyslogMessage contains "authentication failure" and SyslogMessage contains " uid=0"
| parse SyslogMessage with * "rhost=" ExternalIP
| project TimeGenerated, Computer, ProcessName, HostIP, ExternalIP, ProcessID;  
// Below pulls messages from syslog-authpriv logs that show each instance an unknown user tried to logon. 
let userfail = Syslog 
| where Facility == "authpriv" 
| where TimeGenerated >= startdate
| where SyslogMessage contains "user unknown"
| project TimeGenerated, Computer, HostIP, ProcessID;
// Join the two log messages above
let userauthfail = authfail | join (userfail) on Computer, HostIP, ProcessID
| project TimeGenerated, Computer, HostIP, ExternalIP, ProcessID ;
// Extract the EventTime of the first logon attempt
let firstfail = userauthfail
| summarize arg_min(TimeGenerated, *) by Computer, ExternalIP
| project Computer, ExternalIP, FirstLogonAttempt = TimeGenerated;
// Extract the EventTime of the last logon attempt
let lastfail = userauthfail
| summarize arg_max(TimeGenerated, *) by Computer, ExternalIP
| project Computer, ExternalIP, LatestLogonAttempt = TimeGenerated;
// Join first and last logon attempt data and calculate the time between them (AttemptPeriodLength).
let faildates = firstfail | join (lastfail) on Computer, ExternalIP
| project ExternalIP, Computer, FirstLogonAttempt, LatestLogonAttempt, TimeBetweenLogonAttempts = LatestLogonAttempt - FirstLogonAttempt;
// Count the number of failed logon attempts by External IP and internal machine
let totalfails = userauthfail
| summarize count(TimeGenerated) by ExternalIP, Computer, HostIP
| project ExternalIP, Computer, HostIP, TotalLogonAttempts = count_TimeGenerated;
// Combine total attempts with timing data from above
let finalfails = totalfails | join (faildates) on Computer, ExternalIP
| project SourceAddress = ExternalIP, DestinationHost = Computer, DestinationIP = HostIP, TotalLogonAttempts, FirstLogonAttempt, LatestLogonAttempt, TimeBetweenLogonAttempts
// Sort by Computer name
| order by DestinationHost asc nulls last ;
// Output table
finalfails | where TotalLogonAttempts >= 6
