// Name: IPAddress associated with bottom 10 Accounts
// Description: The bottom 10 count of user account logon attempts from a given IPAddress during a given time period based on SigninLogs   
//
// Entity: IPAddress
// Input: Compromised Account
// Output: Users
//
// QueryPeriod:  +-1d default, change as needed
//
// Data Source: #SigninLogs
//
// Tactics: #Persistence, #Discovery, #LateralMovement, #Collection
//
let GetLeastPrevUsersbyIP = (suspiciousEventTime:datetime, v_ipAddress:string){
let v_StartTime = suspiciousEventTime-1d;
let v_EndTime = suspiciousEventTime+1d;
SigninLogs
| where TimeGenerated between (v_StartTime .. v_EndTime)
| where IPAddress contains v_ipAddress
| extend RemoteHost = tolower(tostring(parsejson(DeviceDetail.["displayName"])))
| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)
| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)
| summarize min(TimeGenerated), max(TimeGenerated), count() by RemoteHost , UserDisplayName, UserPrincipalName, AppDisplayName, ClientAppUsed, tostring(OS), tostring(Browser), IPAddress, ResultType, ResultDescription, Location, State, City, StatusCode, StatusDetails
| top 10 by count_ asc nulls last 
| project StartTimeUtc = min_TimeGenerated, EndTimeUtc = max_TimeGenerated, RemoteHost, UserDisplayName, UserPrincipalName, AppDisplayName, ClientAppUsed, OS, Browser , IPAddress, ResultType, ResultDescription, Location, State, City, StatusCode, StatusDetails, count_ 
};
// change datetime value and <ipaddress> value below
GetLeastPrevUsersbyIP(datetime('2019-02-05T10:36:07Z'), "<ipaddress>")