{
  "id": "e79325a2-4989-44c6-a3f2-236d8672ab44",
  "name": "Accounts and User Agents associated with multiple IPs",
  "description": "Summary of users/user agents associated with authentications from multiple IPs within a short timeframe.  This query computes and joins two tables to highlight IPs associated with multiple authentications: 1- UserAgents seen in authentications from multiple IPs within short timeframe.  2- User Ids seen authenticated from multiple IPs.  The time window join looks for instances of a small elpased time between logons.",
  "techniques": [ "InitialAccess" ],
  "query": "let timeRange=ago(7d);\nlet officeAuthentications = OfficeActivity\n| where TimeGenerated >= timeRange\n| where RecordType in (\"AzureActiveDirectoryAccountLogon\", \"AzureActiveDirectoryStsLogon\") \n| extend UserAgent = extractjson(\"$[0].Value\", ExtendedProperties, typeof(string))\n| where Operation == \"UserLoggedIn\";\n// We will perform a time window join to identify useragents seen from multiple IPs within a 1-day period\nlet lookupWindow = 1d;\nlet lookupBin = lookupWindow / 2.0; // lookup bin = equal to 1/2 of the lookup window\nofficeAuthentications\n| project-rename Start=TimeGenerated\n| extend TimeKey = bin(Start, lookupBin) \n| join kind = inner (\n  officeAuthentications \n    | project-rename End=TimeGenerated\n    // TimeKey on the right side of the join - emulates this authentication appearing several times\n    | extend TimeKey = range(bin(End - lookupWindow, lookupBin), bin(End, lookupBin), lookupBin)\n    // translate TimeKey arrange range to a column\n    | mvexpand TimeKey to typeof(datetime)\n) on UserAgent, TimeKey \n| project timeSpan = End - Start, UserId, ClientIP , UserAgent , Start, End\n| summarize dcount(ClientIP) by  UserAgent\n| where dcount_ClientIP >1\n| join kind=inner (\n   // User IDs associated with multiple different client IPs within a 1-day period:\n   // Because of the join we can increase the timeframe for  which we consider accounts with multiple source IPs\n   officeAuthentications\n   | summarize minTime=min(TimeGenerated), maxTime=max(TimeGenerated), dcount(ClientIP) by UserId, UserAgent\n   | project UserId, dcount_ClientIP , timeSpan = maxTime-minTime, UserAgent \n   | where dcount_ClientIP >1 and timeSpan <= 1d\n   | project UserId, distinctIPCount=dcount_ClientIP, timeSpan, UserAgent) on UserAgent\n| project UserAgent, UserId, distinctIPCount"
}