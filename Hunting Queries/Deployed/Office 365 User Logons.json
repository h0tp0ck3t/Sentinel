{
    "id": "9f74e539-3bb5-49bb-919b-171269f59798",
    "name": "Office 365 user logons",
    "description": "Provides a summary view of a given account's logon history â€“ for use when investigating an account that has been identified as having associated suspect activity or been otherwise compromised.",
    "techniques": [],
    "query": "let LogonEvents=() {\n    let logonFail=OfficeActivity\n    | where RecordType in (\"AzureActiveDirectoryAccountLogon\", \"AzureActiveDirectoryStsLogon\") and ResultStatus =~ \"Failed\"\n    | project  TimeGenerated, AccountName=split(UserId, \"@\").[0], AccountDomain = iff(RecordType == \"AzureActiveDirectoryAccountLogon\",UserDomain,split(UserId, \"@\").[1]), UserId, IpAddress=ClientIP, OrganizationId, \n    ActionType=\"LogonFailure\";\n    let logonSuccess=OfficeActivity\n    | where RecordType in (\"AzureActiveDirectoryAccountLogon\", \"AzureActiveDirectoryStsLogon\") and ResultStatus =~ \"Succeeded\"\n    | project  TimeGenerated, AccountName=split(UserId, \"@\").[0], AccountDomain = iff(RecordType == \"AzureActiveDirectoryAccountLogon\",UserDomain,split(UserId, \"@\").[1]), UserId, IpAddress=ClientIP, OrganizationId, ActionType=\"Logon\";\n     logonFail | union logonSuccess\n}; \nlet logonSummary =\nLogonEvents \n|summarize count() by ActionType, IpAddress, tostring(AccountName), tostring(AccountDomain), UserId, OrganizationId, bin(TimeGenerated, 1m); \nlet logon_success = logonSummary | where ActionType == \"Logon\";\nlet logon_fail = logonSummary | where ActionType == \"LogonFailure\";\nlogon_fail | join kind = leftouter (logon_success) on  IpAddress\n| project TimeGenerated, IpAddress, failCount=count_, AccountName, OrganizationId, UserId, successCount=count_1 \n| extend successRate = 1.0*successCount/(successCount+failCount)\n| project TimeGenerated, IpAddress, AccountName, successRate, failCount, successCount, UserId, OrganizationId"
}